plugins {
    id 'java'
	id 'jacoco'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.acme.insurance'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}	

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'javax.persistence:javax.persistence-api:2.2'
	implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    // Observabilidade
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Logging com MDC
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.slf4j:jul-to-slf4j'
    implementation 'org.slf4j:log4j-over-slf4j'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    
    // Tracing (com OpenTelemetry ou Spring Sleuth)
    implementation 'io.opentelemetry:opentelemetry-api:1.28.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.28.0'	

}

test {
    useJUnitPlatform()
}
